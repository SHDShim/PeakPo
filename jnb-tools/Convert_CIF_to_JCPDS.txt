
%matplotlib inline

import pymatgen as mg
from pymatgen import Lattice, Structure
from pymatgen.analysis.diffraction.xrd import XRDCalculator
from pymatgen.symmetry.analyzer import SpacegroupAnalyzer
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

import sys
sys.path.insert(0, '../')
import ds_jcpds

fn_cif = "./CIFs/bridgmanite_Horiuchi1987.cif"

material = mg.Structure.from_file(fn_cif)

print('Unit-cell volume = ', material.volume)
print('Density = ', material.density)
print('Chemical formula = ', material.formula)

lattice = material.lattice
print('Lattice parameters = ', lattice.a, lattice.b, lattice.c, \
      lattice.alpha, lattice.beta, lattice.gamma)
print(SpacegroupAnalyzer(material).get_crystal_system())

wl_xray = 0.3344
xrange = (0,30)

c = XRDCalculator(wavelength=wl_xray)
pattern = c.get_xrd_data(material, two_theta_range = xrange)

d_lines = []
for lines in pattern:
    hklarr = lines[2].keys()
    for line in hklarr:
        d_lines.append([lines[0], lines[3], lines[1]] + list(line))

diff_lines = np.asarray(d_lines)

table = pd.DataFrame(data = diff_lines,    # values
    columns=['Two Theta', 'd-spacing', 'intensity', 'h', 'k', 'l'])  # 1st row as the column names
table.head()

f = plt.figure(figsize=(10,3))
plt.vlines(diff_lines[:,0], 0., diff_lines[:,2], color='b');

k0 = 260.
k0p = 4.
alpha = 1.e-5

material_jcpds = ds_jcpds.JCPDS()
material_jcpds.set_from_cif(fn_cif, k0, k0p, \
                      thermal_expansion=alpha)

material_jcpds.cal_dsp(pressure = 100.)
dl = material_jcpds.get_DiffractionLines()
tth, inten = material_jcpds.get_tthVSint(wl_xray)

f = plt.figure(figsize=(10,3))
plt.vlines(diff_lines[:,0], 0., diff_lines[:,2], color='b')
plt.vlines(tth, 0., inten, color = 'r');

fn_jcpds = './bm.jcpds'
comments_jcpds = "test bridgmanite"

material_jcpds.write_to_file(fn_jcpds, comments=comments_jcpds)

material_test = ds_jcpds.JCPDS(filename = fn_jcpds)

material_test.cal_dsp(pressure = 10.)
dl = material_test.get_DiffractionLines()
tth, inten = material_test.get_tthVSint(wl_xray)
print(dl)

f = plt.figure(figsize=(10,3))
plt.vlines(diff_lines[:,0], 0., diff_lines[:,2], color='b')
plt.vlines(tth, 0., inten, color = 'r');




